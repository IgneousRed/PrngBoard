MWC32_init :: proc(seed: u32) -> MWC32 {
	rng := MWC32{0xd15ea5e5, 0xcafef00d, seed, seed}
	for _ in 0 ..< 8 {rng[2] ~= MWC32_u32(&rng)}
	return rng
}
MWC32_u32 :: proc(r: ^MWC32) -> u32 {
	mix := u64(r[1]) * u64(0xcfdbc53d) + u64(r[0])
	r^ = {u32(mix >> 32), r[2], r[3], u32(mix)}
	return u32(mix)
}
MWC32 :: [4]u32

----------------------------------------------------------------

RNG_test using PractRand version 0.95
RNG = RNG_stdin, seed = 0x0000000000000000
test set = expanded, folding = extra

length= 4 kilobytes (2^12 bytes)
  [Low4/16]FPF-14+6/64:all          R= +19.5  p~=   1e-5    mildly suspicious
  [Low8/32]DC7-9x1Bytes-1:both      R=  -3.9  p =1-9.0e-4   unusual
  [Low8/32]FPF-14+6/64:all          R= +19.5  p~=   1e-5    mildly suspicious

length= 16 kilobytes (2^14 bytes)
  [Low4/64]DC7-9x1Bytes-1:both      R=  -4.1  p =1-4.9e-4   unusual

length= 32 terabytes (2^45 bytes)
  no anomalies in 2793 test result(s)
