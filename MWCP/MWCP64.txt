MWCP64_init :: proc(seed: u64) -> MWCP64 {
	rng := MWCP64{0x14057b7ef767814f, 0xcafef00dd15ea5e5, seed, seed}
	for _ in 0 ..< 8 {rng[2] ~= MWCP64_u64(&rng)}
	return rng
}
MWCP64_u64 :: proc(r: ^MWCP64) -> u64 {
	mix := u128(r[1]) * u128(0xfeb344657c0af413) + u128(r[0])
	r^ = {u64(mix >> 64), r[2], r[3], u64(mix)}
	return u64(mix >> 64) + u64(mix)
}
MWCP64 :: [4]u64

----------------------------------------------------------------

RNG_test using PractRand version 0.95
RNG = RNG_stdin, seed = 0x0000000000000000
test set = expanded, folding = extra

length= 4 kilobytes (2^12 bytes)
  [Low4/16]FPF-14+6/64:all          R= -19.0  p~= 1-1e-5    mildly suspicious
  [Low8/32]FPF-14+6/64:all          R= -19.0  p~= 1-1e-5    mildly suspicious

length= 2 megabytes (2^21 bytes)
  [Low4/64]Gap-16:A                 R=  +6.8  p =  3.9e-5   unusual

length= 8 terabytes (2^43 bytes)
  [Low4/32]FPF-14+6/4:cross         R=  -2.8  p =1-3.2e-5   unusual

length= 32 terabytes (2^45 bytes)
  no anomalies in 2793 test result(s)
