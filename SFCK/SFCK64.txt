SFC64_init :: proc(seed: u64) -> SFC64 {
	rng := SFC64{seed, seed, seed, seed}
	for _ in 0 ..< 9 do SFC64_u64(&rng)
	return rng
}
SFC64_u64 :: proc(r: ^SFC64) -> u64 {
	result := r[0] + r[1] + r[3]
	r[0] = r[1] ~ (r[1] >> 11)
	r[1] = r[2] + (r[2] << 3)
	r[2] = bits.rotate_left64(r[2], 24) + result
	r[3] += 0x9e3779b97f4a7c15
	return result
}
SFC64 :: [4]u64

----------------------------------------------------------------

RNG_test using PractRand version 0.95
RNG = RNG_stdin, seed = 0x0000000000000000
test set = expanded, folding = extra

length= 1 gigabyte (2^30 bytes)
  [Low4/64]DC7-6x2Bytes-1:indep     R=  -2.0  p = 1-3e-5    unusual

length= 32 terabytes (2^45 bytes)
  no anomalies in 2793 test result(s)
