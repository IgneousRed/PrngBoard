SFC16_init :: proc(seed: u16) -> SFC16 {
	rng := SFC16{seed, seed, seed, seed}
	for _ in 0 ..< 9 do SFC16_u16(&rng)
	return rng
}
SFC16_u16 :: proc(r: ^SFC16) -> u16 {
	result := r[0] + r[1] + r[3]
	r[0] = r[1] ~ (r[1] >> 3)
	r[1] = r[2] + (r[2] << 2)
	r[2] = bits.rotate_left16(r[2], 4) + result
	r[3] += 1
	return result
}
SFC16 :: [4]u16

----------------------------------------------------------------

RNG_test using PractRand version 0.95
RNG = RNG_stdin, seed = 0x0000000000000000
test set = expanded, folding = extra

length= 1 kilobyte (2^10 bytes)
  FPF-14+6/64:all                   R= -24.9  p~= 1-3e-8    very suspicious

length= 16 kilobytes (2^14 bytes)
  [Low8/64]BCFN(0+0,13-9,T)         R=  -3.7  p =1-6.1e-5   unusual

length= 32 terabytes (2^45 bytes)
  no anomalies in 2793 test result(s)
